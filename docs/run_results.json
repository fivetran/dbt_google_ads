{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.13", "generated_at": "2024-07-08T22:44:03.348175Z", "invocation_id": "54bd267d-f866-4a85-920a-370f736bd169", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:01.786094Z", "completed_at": "2024-07-08T22:44:01.873299Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:01.873923Z", "completed_at": "2024-07-08T22:44:01.873941Z"}], "thread_id": "Thread-1", "execution_time": 0.09495282173156738, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__account_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`google_ads_tests`.`account_history_data`", "relation_name": "`dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__account_history_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:01.868335Z", "completed_at": "2024-07-08T22:44:01.874284Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:01.876984Z", "completed_at": "2024-07-08T22:44:01.876989Z"}], "thread_id": "Thread-4", "execution_time": 0.09502792358398438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__ad_group_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`google_ads_tests`.`ad_group_history_data`", "relation_name": "`dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_group_history_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:01.810194Z", "completed_at": "2024-07-08T22:44:01.874611Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:01.877264Z", "completed_at": "2024-07-08T22:44:01.877268Z"}], "thread_id": "Thread-2", "execution_time": 0.09747004508972168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__account_stats_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`google_ads_tests`.`account_stats_data`", "relation_name": "`dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__account_stats_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:01.829964Z", "completed_at": "2024-07-08T22:44:01.875532Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:01.877965Z", "completed_at": "2024-07-08T22:44:01.877967Z"}], "thread_id": "Thread-3", "execution_time": 0.09737181663513184, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__ad_group_criterion_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`google_ads_tests`.`ad_group_criterion_history_data`", "relation_name": "`dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_group_criterion_history_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:01.880624Z", "completed_at": "2024-07-08T22:44:01.886409Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:01.897473Z", "completed_at": "2024-07-08T22:44:01.897480Z"}], "thread_id": "Thread-1", "execution_time": 0.020498991012573242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__ad_group_stats_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`google_ads_tests`.`ad_group_stats_data`", "relation_name": "`dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_group_stats_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:01.894132Z", "completed_at": "2024-07-08T22:44:01.903103Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:01.903690Z", "completed_at": "2024-07-08T22:44:01.903700Z"}], "thread_id": "Thread-3", "execution_time": 0.018980026245117188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__campaign_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`google_ads_tests`.`campaign_history_data`", "relation_name": "`dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__campaign_history_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:01.890087Z", "completed_at": "2024-07-08T22:44:01.905472Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:01.910526Z", "completed_at": "2024-07-08T22:44:01.910533Z"}], "thread_id": "Thread-2", "execution_time": 0.028051137924194336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__ad_stats_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`google_ads_tests`.`ad_stats_data`", "relation_name": "`dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_stats_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:01.886677Z", "completed_at": "2024-07-08T22:44:01.905794Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:01.911193Z", "completed_at": "2024-07-08T22:44:01.911197Z"}], "thread_id": "Thread-4", "execution_time": 0.029728412628173828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__ad_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`google_ads_tests`.`ad_history_data`", "relation_name": "`dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_history_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:01.899294Z", "completed_at": "2024-07-08T22:44:01.909767Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:01.913538Z", "completed_at": "2024-07-08T22:44:01.913542Z"}], "thread_id": "Thread-1", "execution_time": 0.016512155532836914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__campaign_stats_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`google_ads_tests`.`campaign_stats_data`", "relation_name": "`dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__campaign_stats_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:01.906082Z", "completed_at": "2024-07-08T22:44:01.913237Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:01.916408Z", "completed_at": "2024-07-08T22:44:01.916415Z"}], "thread_id": "Thread-3", "execution_time": 0.01347970962524414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__keyword_stats_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`google_ads_tests`.`keyword_stats_data`", "relation_name": "`dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__keyword_stats_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:01.919365Z", "completed_at": "2024-07-08T22:44:01.920821Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:01.926564Z", "completed_at": "2024-07-08T22:44:01.926569Z"}], "thread_id": "Thread-2", "execution_time": 0.011930704116821289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.google_ads_integration_tests.account_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:01.921692Z", "completed_at": "2024-07-08T22:44:01.922829Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:01.927260Z", "completed_at": "2024-07-08T22:44:01.927263Z"}], "thread_id": "Thread-4", "execution_time": 0.012678861618041992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.google_ads_integration_tests.account_stats_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:01.924722Z", "completed_at": "2024-07-08T22:44:01.925974Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:01.929475Z", "completed_at": "2024-07-08T22:44:01.929479Z"}], "thread_id": "Thread-1", "execution_time": 0.01230001449584961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.google_ads_integration_tests.ad_group_criterion_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:01.928046Z", "completed_at": "2024-07-08T22:44:01.929156Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:01.931966Z", "completed_at": "2024-07-08T22:44:01.931969Z"}], "thread_id": "Thread-3", "execution_time": 0.009153127670288086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.google_ads_integration_tests.ad_group_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:01.934331Z", "completed_at": "2024-07-08T22:44:01.935596Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:01.940783Z", "completed_at": "2024-07-08T22:44:01.940789Z"}], "thread_id": "Thread-2", "execution_time": 0.010473966598510742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.google_ads_integration_tests.ad_group_stats_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:01.936507Z", "completed_at": "2024-07-08T22:44:01.937799Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:01.941549Z", "completed_at": "2024-07-08T22:44:01.941552Z"}], "thread_id": "Thread-4", "execution_time": 0.012775897979736328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.google_ads_integration_tests.ad_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:01.939079Z", "completed_at": "2024-07-08T22:44:01.940248Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:01.944789Z", "completed_at": "2024-07-08T22:44:01.944793Z"}], "thread_id": "Thread-1", "execution_time": 0.012541770935058594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.google_ads_integration_tests.ad_stats_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:01.942375Z", "completed_at": "2024-07-08T22:44:01.944440Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:01.947208Z", "completed_at": "2024-07-08T22:44:01.947212Z"}], "thread_id": "Thread-3", "execution_time": 0.009983062744140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.google_ads_integration_tests.campaign_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:01.949405Z", "completed_at": "2024-07-08T22:44:01.950758Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:01.957327Z", "completed_at": "2024-07-08T22:44:01.957332Z"}], "thread_id": "Thread-2", "execution_time": 0.012322187423706055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.google_ads_integration_tests.campaign_stats_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:01.951607Z", "completed_at": "2024-07-08T22:44:01.952703Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:01.958499Z", "completed_at": "2024-07-08T22:44:01.958508Z"}], "thread_id": "Thread-4", "execution_time": 0.01565098762512207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.google_ads_integration_tests.keyword_stats_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:01.959577Z", "completed_at": "2024-07-08T22:44:02.364863Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:02.366968Z", "completed_at": "2024-07-08T22:44:02.366977Z"}], "thread_id": "Thread-3", "execution_time": 0.41522812843322754, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__ad_group_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_group_history_tmp`\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    campaign_name\n    \n as \n    \n    campaign_name\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    cast(null as boolean) as \n    \n    _fivetran_active\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        cast(id as string) as ad_group_id,\n        updated_at,\n        type as ad_group_type, \n        campaign_id, \n        campaign_name, \n        name as ad_group_name, \n        status as ad_group_status,\n        row_number() over (partition by source_relation, id order by updated_at desc) = 1 as is_most_recent_record\n    from fields\n    where coalesce(_fivetran_active, true)\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_group_history`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:01.953851Z", "completed_at": "2024-07-08T22:44:02.365275Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:02.367407Z", "completed_at": "2024-07-08T22:44:02.367411Z"}], "thread_id": "Thread-1", "execution_time": 0.4203188419342041, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__account_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__account_history_tmp`\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    auto_tagging_enabled\n    \n as \n    \n    auto_tagging_enabled\n    \n, \n    \n    \n    currency_code\n    \n as \n    \n    currency_code\n    \n, \n    \n    \n    descriptive_name\n    \n as \n    \n    descriptive_name\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    time_zone\n    \n as \n    \n    time_zone\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    cast(null as boolean) as \n    \n    _fivetran_active\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        id as account_id,\n        updated_at,\n        currency_code,\n        auto_tagging_enabled,\n        time_zone,\n        descriptive_name as account_name,\n        row_number() over (partition by source_relation, id order by updated_at desc) = 1 as is_most_recent_record\n    from fields\n    where coalesce(_fivetran_active, true)\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__account_history`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:01.970841Z", "completed_at": "2024-07-08T22:44:02.365648Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:02.367774Z", "completed_at": "2024-07-08T22:44:02.367778Z"}], "thread_id": "Thread-4", "execution_time": 0.40386509895324707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__ad_group_criterion_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_group_criterion_history_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    ad_group_id\n    \n as \n    \n    ad_group_id\n    \n, \n    \n    \n    base_campaign_id\n    \n as \n    \n    base_campaign_id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    keyword_match_type\n    \n as \n    \n    keyword_match_type\n    \n, \n    \n    \n    keyword_text\n    \n as \n    \n    keyword_text\n    \n, \n    cast(null as boolean) as \n    \n    _fivetran_active\n    \n \n\n\n    \n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        id as criterion_id,\n        cast(ad_group_id as string) as ad_group_id,\n        base_campaign_id,\n        updated_at,\n        type,\n        status,\n        keyword_match_type,\n        keyword_text,\n        row_number() over (partition by source_relation, id order by updated_at desc) = 1 as is_most_recent_record\n    from fields\n    where coalesce(_fivetran_active, true)\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_group_criterion_history`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:01.966810Z", "completed_at": "2024-07-08T22:44:02.455477Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:02.456006Z", "completed_at": "2024-07-08T22:44:02.456013Z"}], "thread_id": "Thread-2", "execution_time": 0.49152493476867676, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__account_stats", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__account_stats_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_id\n    \n as \n    \n    _fivetran_id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    ad_network_type\n    \n as \n    \n    ad_network_type\n    \n, \n    \n    \n    clicks\n    \n as \n    \n    clicks\n    \n, \n    \n    \n    cost_micros\n    \n as \n    \n    cost_micros\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    date\n    \n as \n    \n    date\n    \n, \n    \n    \n    device\n    \n as \n    \n    device\n    \n, \n    \n    \n    impressions\n    \n as \n    \n    impressions\n    \n, \n    \n    \n    conversions\n    \n as \n    \n    conversions\n    \n, \n    \n    \n    conversions_value\n    \n as \n    \n    conversions_value\n    \n, \n    \n    \n    view_through_conversions\n    \n as \n    \n    view_through_conversions\n    \n\n\n\n    \n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        customer_id as account_id, \n        date as date_day,\n        ad_network_type,\n        device,\n        coalesce(clicks, 0) as clicks, \n        coalesce(cost_micros, 0) / 1000000.0 as spend, \n        coalesce(impressions, 0) as impressions,\n        coalesce(conversions, 0) as conversions,\n        coalesce(conversions_value, 0) as conversions_value,\n        coalesce(view_through_conversions, 0) as view_through_conversions\n        \n        \n\n\n\n\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__account_stats`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:02.373702Z", "completed_at": "2024-07-08T22:44:02.863841Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:02.864530Z", "completed_at": "2024-07-08T22:44:02.864542Z"}], "thread_id": "Thread-3", "execution_time": 0.4936192035675049, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__ad_group_stats", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_group_stats_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_id\n    \n as \n    \n    _fivetran_id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    ad_network_type\n    \n as \n    \n    ad_network_type\n    \n, \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    clicks\n    \n as \n    \n    clicks\n    \n, \n    \n    \n    cost_micros\n    \n as \n    \n    cost_micros\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    date\n    \n as \n    \n    date\n    \n, \n    \n    \n    device\n    \n as \n    \n    device\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    impressions\n    \n as \n    \n    impressions\n    \n, \n    \n    \n    conversions\n    \n as \n    \n    conversions\n    \n, \n    \n    \n    conversions_value\n    \n as \n    \n    conversions_value\n    \n, \n    \n    \n    view_through_conversions\n    \n as \n    \n    view_through_conversions\n    \n\n\n\n    \n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation,\n        customer_id as account_id, \n        date as date_day, \n        cast(id as string) as ad_group_id, \n        campaign_id, \n        device,\n        ad_network_type,\n        coalesce(clicks, 0) as clicks, \n        coalesce(cost_micros, 0) / 1000000.0 as spend, \n        coalesce(impressions, 0) as impressions,\n        coalesce(conversions, 0) as conversions,\n        coalesce(conversions_value, 0) as conversions_value,\n        coalesce(view_through_conversions, 0) as view_through_conversions\n        \n        \n\n\n\n\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_group_stats`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:02.376255Z", "completed_at": "2024-07-08T22:44:02.870253Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:02.872243Z", "completed_at": "2024-07-08T22:44:02.872250Z"}], "thread_id": "Thread-1", "execution_time": 0.5016739368438721, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__campaign_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__campaign_history_tmp`\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    advertising_channel_subtype\n    \n as \n    \n    advertising_channel_subtype\n    \n, \n    \n    \n    advertising_channel_type\n    \n as \n    \n    advertising_channel_type\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    end_date\n    \n as \n    \n    end_date\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    serving_status\n    \n as \n    \n    serving_status\n    \n, \n    \n    \n    start_date\n    \n as \n    \n    start_date\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    tracking_url_template\n    \n as \n    \n    tracking_url_template\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    cast(null as boolean) as \n    \n    _fivetran_active\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        id as campaign_id, \n        updated_at,\n        name as campaign_name,\n        customer_id as account_id,\n        advertising_channel_type,\n        advertising_channel_subtype,\n        start_date,\n        end_date,\n        serving_status,\n        status,\n        tracking_url_template,\n        row_number() over (partition by source_relation, id order by updated_at desc) = 1 as is_most_recent_record\n    from fields\n    where coalesce(_fivetran_active, true)\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__campaign_history`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:02.458030Z", "completed_at": "2024-07-08T22:44:02.870565Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:02.873008Z", "completed_at": "2024-07-08T22:44:02.873013Z"}], "thread_id": "Thread-2", "execution_time": 0.4172530174255371, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__ad_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_history_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    ad_group_id\n    \n as \n    \n    ad_group_id\n    \n, \n    \n    \n    display_url\n    \n as \n    \n    display_url\n    \n, \n    \n    \n    final_urls\n    \n as \n    \n    final_urls\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    cast(null as boolean) as \n    \n    _fivetran_active\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        cast(ad_group_id as string) as ad_group_id, \n        id as ad_id,\n        name as ad_name,\n        updated_at,\n        type as ad_type,\n        status as ad_status,\n        display_url,\n        final_urls as source_final_urls,\n        replace(replace(final_urls, '[', ''),']','') as final_urls,\n        row_number() over (partition by source_relation, id, ad_group_id order by updated_at desc) = 1 as is_most_recent_record\n    from fields\n    where coalesce(_fivetran_active, true)\n),\n\nfinal_urls as (\n\n    select \n        *,\n        --Extract the first url within the list of urls provided within the final_urls field\n        \n\n  \n    split(\n        final_urls,\n        ','\n        )[safe_offset(0)]\n  \n\n as final_url\n\n    from final\n\n),\n\nurl_fields as (\n    select \n        *,\n        \n\n  \n    split(\n        final_url,\n        '?'\n        )[safe_offset(0)]\n  \n\n as base_url,\n        \n    safe_cast(\n\n  \n    split(\n        \n\n  \n    split(\n        \n\n    replace(\n        \n\n    replace(\n        \n\n    replace(\n        final_url,\n        'android-app://',\n        ''\n    )\n\n\n,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n        '/'\n        )[safe_offset(0)]\n  \n\n,\n        '?'\n        )[safe_offset(0)]\n  \n\n as string)\n as url_host,\n        '/' || \n    safe_cast(\n\n  \n    split(\n        \n\n    case when \n\n    length(\n        \n\n    replace(\n        \n\n    replace(\n        final_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    )-coalesce(\n            nullif(\n\n    strpos(\n        \n\n    replace(\n        \n\n    replace(\n        final_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n        '/'\n\n    ), 0),\n            \n\n    strpos(\n        \n\n    replace(\n        \n\n    replace(\n        final_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n        '?'\n\n    ) - 1\n            ) = 0\n        then ''\n    else\n        substr(\n            \n\n    replace(\n        \n\n    replace(\n        final_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n            -1 * (\n\n    length(\n        \n\n    replace(\n        \n\n    replace(\n        final_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    )-coalesce(\n            nullif(\n\n    strpos(\n        \n\n    replace(\n        \n\n    replace(\n        final_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n        '/'\n\n    ), 0),\n            \n\n    strpos(\n        \n\n    replace(\n        \n\n    replace(\n        final_url,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n        '?'\n\n    ) - 1\n            ))\n        )\n    end,\n        '?'\n        )[safe_offset(0)]\n  \n\n as string)\n as url_path,\n        nullif(\n\n  \n    split(\n        \n\n  \n    split(\n        final_url,\n        'utm_source='\n        )[safe_offset(1)]\n  \n\n,\n        '&'\n        )[safe_offset(0)]\n  \n\n,'') as utm_source,\n        nullif(\n\n  \n    split(\n        \n\n  \n    split(\n        final_url,\n        'utm_medium='\n        )[safe_offset(1)]\n  \n\n,\n        '&'\n        )[safe_offset(0)]\n  \n\n,'') as utm_medium,\n        nullif(\n\n  \n    split(\n        \n\n  \n    split(\n        final_url,\n        'utm_campaign='\n        )[safe_offset(1)]\n  \n\n,\n        '&'\n        )[safe_offset(0)]\n  \n\n,'') as utm_campaign,\n        nullif(\n\n  \n    split(\n        \n\n  \n    split(\n        final_url,\n        'utm_content='\n        )[safe_offset(1)]\n  \n\n,\n        '&'\n        )[safe_offset(0)]\n  \n\n,'') as utm_content,\n        nullif(\n\n  \n    split(\n        \n\n  \n    split(\n        final_url,\n        'utm_term='\n        )[safe_offset(1)]\n  \n\n,\n        '&'\n        )[safe_offset(0)]\n  \n\n,'') as utm_term\n    from final_urls\n)\n\nselect * \nfrom url_fields", "relation_name": "`dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_history`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:02.383264Z", "completed_at": "2024-07-08T22:44:02.871608Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:02.874054Z", "completed_at": "2024-07-08T22:44:02.874058Z"}], "thread_id": "Thread-4", "execution_time": 0.5031991004943848, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__ad_stats", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_stats_tmp`\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    ad_group\n    \n as \n    \n    ad_group\n    \n, \n    \n    \n    ad_group_id\n    \n as \n    \n    ad_group_id\n    \n, \n    \n    \n    ad_id\n    \n as \n    \n    ad_id\n    \n, \n    \n    \n    ad_network_type\n    \n as \n    \n    ad_network_type\n    \n, \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    clicks\n    \n as \n    \n    clicks\n    \n, \n    \n    \n    cost_micros\n    \n as \n    \n    cost_micros\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    date\n    \n as \n    \n    date\n    \n, \n    \n    \n    device\n    \n as \n    \n    device\n    \n, \n    \n    \n    impressions\n    \n as \n    \n    impressions\n    \n, \n    \n    \n    keyword_ad_group_criterion\n    \n as \n    \n    keyword_ad_group_criterion\n    \n, \n    cast(null as INT64) as \n    \n    conversions\n    \n , \n    cast(null as INT64) as \n    \n    conversions_value\n    \n , \n    cast(null as INT64) as \n    \n    view_through_conversions\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        customer_id as account_id, \n        date as date_day, \n        \n        coalesce(cast(ad_group_id as string), \n\n  \n    split(\n        ad_group,\n        'adGroups/'\n        )[safe_offset(1)]\n  \n\n) as ad_group_id,\n        \n        keyword_ad_group_criterion,\n        ad_network_type,\n        device,\n        ad_id, \n        campaign_id, \n        coalesce(clicks, 0) as clicks, \n        coalesce(cost_micros, 0) / 1000000.0 as spend, \n        coalesce(impressions, 0) as impressions,\n        coalesce(conversions, 0) as conversions,\n        coalesce(conversions_value, 0) as conversions_value,\n        coalesce(view_through_conversions, 0) as view_through_conversions\n\n        \n\n\n\n\n\n    from fields\n)\n\nselect * from final", "relation_name": "`dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_stats`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:02.882494Z", "completed_at": "2024-07-08T22:44:02.899860Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:02.900480Z", "completed_at": "2024-07-08T22:44:02.900488Z"}], "thread_id": "Thread-2", "execution_time": 0.023611783981323242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__ad_group_history_source_relation__ad_group_id__updated_at.94eb3f93a4", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_group_id, updated_at\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_group_history`\n    group by source_relation, ad_group_id, updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:02.893164Z", "completed_at": "2024-07-08T22:44:02.902394Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:02.906808Z", "completed_at": "2024-07-08T22:44:02.906814Z"}], "thread_id": "Thread-4", "execution_time": 0.029269933700561523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.not_null_stg_google_ads__ad_group_history_ad_group_id.f6c7c939be", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_group_id\nfrom `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_group_history`\nwhere ad_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:02.902703Z", "completed_at": "2024-07-08T22:44:02.912002Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:02.912577Z", "completed_at": "2024-07-08T22:44:02.912582Z"}], "thread_id": "Thread-2", "execution_time": 0.01136016845703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__account_history_source_relation__account_id__updated_at.0a4d931c44", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, account_id, updated_at\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__account_history`\n    group by source_relation, account_id, updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:02.908781Z", "completed_at": "2024-07-08T22:44:02.917881Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:02.918412Z", "completed_at": "2024-07-08T22:44:02.918416Z"}], "thread_id": "Thread-4", "execution_time": 0.01078486442565918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.not_null_stg_google_ads__account_history_account_id.5ca373f51f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__account_history`\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:02.914371Z", "completed_at": "2024-07-08T22:44:02.923982Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:02.924700Z", "completed_at": "2024-07-08T22:44:02.924704Z"}], "thread_id": "Thread-2", "execution_time": 0.011511087417602539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__ad_group_criterion_history_source_relation__criterion_id__ad_group_id__updated_at.8d37dd2fa0", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, criterion_id, ad_group_id, updated_at\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_group_criterion_history`\n    group by source_relation, criterion_id, ad_group_id, updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:02.920126Z", "completed_at": "2024-07-08T22:44:02.925549Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:02.926832Z", "completed_at": "2024-07-08T22:44:02.926836Z"}], "thread_id": "Thread-4", "execution_time": 0.008060932159423828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.not_null_stg_google_ads__ad_group_criterion_history_criterion_id.7a0a8b8476", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect criterion_id\nfrom `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_group_criterion_history`\nwhere criterion_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:02.927879Z", "completed_at": "2024-07-08T22:44:02.942850Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:02.943446Z", "completed_at": "2024-07-08T22:44:02.943452Z"}], "thread_id": "Thread-2", "execution_time": 0.017544984817504883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads.google_ads__account_report", "compiled": true, "compiled_code": "\n\nwith stats as (\n\n    select *\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__account_stats`\n), \n\naccounts as (\n\n    select *\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__account_history`\n    where is_most_recent_record = True\n), \n\nfields as (\n\n    select\n        stats.source_relation,\n        stats.date_day,\n        accounts.account_name,\n        stats.account_id,\n        accounts.currency_code,\n        accounts.auto_tagging_enabled,\n        accounts.time_zone,\n        sum(stats.spend) as spend,\n        sum(stats.clicks) as clicks,\n        sum(stats.impressions) as impressions,\n        sum(stats.conversions) as conversions,\n        sum(stats.conversions_value) as conversions_value,\n        sum(stats.view_through_conversions) as view_through_conversions\n\n        \n\n\n\n\n\n    from stats\n    left join accounts\n        on stats.account_id = accounts.account_id\n        and stats.source_relation = accounts.source_relation\n    group by 1,2,3,4,5,6,7\n)\n\nselect *\nfrom fields", "relation_name": "`dbt-package-testing`.`google_ads_tests_google_ads_dev`.`google_ads__account_report`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:02.938431Z", "completed_at": "2024-07-08T22:44:02.948538Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:02.949480Z", "completed_at": "2024-07-08T22:44:02.949485Z"}], "thread_id": "Thread-4", "execution_time": 0.012485027313232422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__account_stats_source_relation__account_id__device__ad_network_type__date_day.7d4d5e9ce2", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, account_id, device, ad_network_type, date_day\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__account_stats`\n    group by source_relation, account_id, device, ad_network_type, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:02.945161Z", "completed_at": "2024-07-08T22:44:02.950655Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:02.951827Z", "completed_at": "2024-07-08T22:44:02.951830Z"}], "thread_id": "Thread-2", "execution_time": 0.011018991470336914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.not_null_stg_google_ads__account_stats_account_id.2a9da5417b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__account_stats`\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:02.952088Z", "completed_at": "2024-07-08T22:44:02.958881Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:02.970638Z", "completed_at": "2024-07-08T22:44:02.970646Z"}], "thread_id": "Thread-4", "execution_time": 0.020257234573364258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.not_null_stg_google_ads__account_stats_date_day.57ac8772d5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__account_stats`\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:02.962880Z", "completed_at": "2024-07-08T22:44:02.977252Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:02.977905Z", "completed_at": "2024-07-08T22:44:02.977912Z"}], "thread_id": "Thread-2", "execution_time": 0.02410888671875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__ad_group_stats_source_relation__ad_group_id__device__ad_network_type__date_day.0755df524f", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_group_id, device, ad_network_type, date_day\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_group_stats`\n    group by source_relation, ad_group_id, device, ad_network_type, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:02.972729Z", "completed_at": "2024-07-08T22:44:02.983459Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:02.988895Z", "completed_at": "2024-07-08T22:44:02.988905Z"}], "thread_id": "Thread-4", "execution_time": 0.017531871795654297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.not_null_stg_google_ads__ad_group_stats_ad_group_id.a8d430f077", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_group_id\nfrom `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_group_stats`\nwhere ad_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:02.983867Z", "completed_at": "2024-07-08T22:44:02.990278Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:02.991660Z", "completed_at": "2024-07-08T22:44:02.991665Z"}], "thread_id": "Thread-2", "execution_time": 0.015522956848144531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.not_null_stg_google_ads__ad_group_stats_date_day.3c6a221786", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_group_stats`\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:02.991946Z", "completed_at": "2024-07-08T22:44:03.004498Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.005087Z", "completed_at": "2024-07-08T22:44:03.005093Z"}], "thread_id": "Thread-4", "execution_time": 0.014995813369750977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads.google_ads__ad_group_report", "compiled": true, "compiled_code": "\n\nwith stats as (\n\n    select *\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_group_stats`\n), \n\naccounts as (\n\n    select *\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__account_history`\n    where is_most_recent_record = True\n), \n\ncampaigns as (\n\n    select *\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__campaign_history`\n    where is_most_recent_record = True\n),\n\nad_groups as (\n\n    select *\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_group_history`\n    where is_most_recent_record = True\n), \n\nfields as (\n\n    select\n        stats.source_relation,\n        stats.date_day,\n        accounts.account_name,\n        accounts.account_id,\n        accounts.currency_code,\n        campaigns.campaign_name,\n        campaigns.campaign_id,\n        ad_groups.ad_group_name,\n        stats.ad_group_id,\n        ad_groups.ad_group_status,\n        ad_groups.ad_group_type,\n        sum(stats.spend) as spend,\n        sum(stats.clicks) as clicks,\n        sum(stats.impressions) as impressions,\n        sum(conversions) as conversions,\n        sum(conversions_value) as conversions_value,\n        sum(view_through_conversions) as view_through_conversions\n\n        \n\n\n\n\n\n    from stats\n    left join ad_groups\n        on stats.ad_group_id = ad_groups.ad_group_id\n        and stats.source_relation = ad_groups.source_relation\n    left join campaigns\n        on ad_groups.campaign_id = campaigns.campaign_id\n        and ad_groups.source_relation = campaigns.source_relation\n    left join accounts\n        on campaigns.account_id = accounts.account_id\n        and campaigns.source_relation = accounts.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10,11\n)\n\nselect *\nfrom fields", "relation_name": "`dbt-package-testing`.`google_ads_tests_google_ads_dev`.`google_ads__ad_group_report`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:02.999707Z", "completed_at": "2024-07-08T22:44:03.010423Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.011165Z", "completed_at": "2024-07-08T22:44:03.011175Z"}], "thread_id": "Thread-2", "execution_time": 0.01306295394897461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__campaign_history_source_relation__campaign_id__updated_at.008fea6b77", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, campaign_id, updated_at\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__campaign_history`\n    group by source_relation, campaign_id, updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:03.006963Z", "completed_at": "2024-07-08T22:44:03.012640Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.014098Z", "completed_at": "2024-07-08T22:44:03.014103Z"}], "thread_id": "Thread-4", "execution_time": 0.012833833694458008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.not_null_stg_google_ads__campaign_history_campaign_id.fa0c825e75", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__campaign_history`\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:03.014704Z", "completed_at": "2024-07-08T22:44:03.023854Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.024560Z", "completed_at": "2024-07-08T22:44:03.024566Z"}], "thread_id": "Thread-2", "execution_time": 0.012430906295776367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__ad_history_source_relation__ad_id__ad_group_id__updated_at.edca86664e", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_id, ad_group_id, updated_at\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_history`\n    group by source_relation, ad_id, ad_group_id, updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:03.020536Z", "completed_at": "2024-07-08T22:44:03.024866Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.026543Z", "completed_at": "2024-07-08T22:44:03.026549Z"}], "thread_id": "Thread-4", "execution_time": 0.007753849029541016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.not_null_stg_google_ads__ad_history_ad_id.8c23c38248", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_history`\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:03.028366Z", "completed_at": "2024-07-08T22:44:03.043811Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.044378Z", "completed_at": "2024-07-08T22:44:03.044385Z"}], "thread_id": "Thread-2", "execution_time": 0.01798105239868164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads.google_ads__ad_report", "compiled": true, "compiled_code": "\n\nwith stats as (\n\n    select *\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_stats`\n), \n\naccounts as (\n\n    select *\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__account_history`\n    where is_most_recent_record = True\n), \n\ncampaigns as (\n\n    select *\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__campaign_history`\n    where is_most_recent_record = True\n), \n\nad_groups as (\n\n    select *\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_group_history`\n    where is_most_recent_record = True\n),\n\nads as (\n\n    select *\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_history`\n    where is_most_recent_record = True\n), \n\nfields as (\n\n    select\n        stats.source_relation,\n        stats.date_day,\n        accounts.account_name,\n        accounts.account_id,\n        accounts.currency_code,\n        campaigns.campaign_name,\n        campaigns.campaign_id,\n        ad_groups.ad_group_name,\n        stats.ad_group_id,\n        stats.ad_id,\n        ads.ad_name,\n        ads.ad_status,\n        ads.ad_type,\n        ads.display_url,\n        ads.source_final_urls,\n        sum(stats.spend) as spend,\n        sum(stats.clicks) as clicks,\n        sum(stats.impressions) as impressions,\n        sum(conversions) as conversions,\n        sum(conversions_value) as conversions_value,\n        sum(view_through_conversions) as view_through_conversions\n\n        \n\n\n\n\n\n    from stats\n    left join ads\n        on stats.ad_id = ads.ad_id\n        and stats.source_relation = ads.source_relation\n        and stats.ad_group_id = ads.ad_group_id\n    left join ad_groups\n        on ads.ad_group_id = ad_groups.ad_group_id\n        and ads.source_relation = ad_groups.source_relation\n    left join campaigns\n        on ad_groups.campaign_id = campaigns.campaign_id\n        and ad_groups.source_relation = campaigns.source_relation\n    left join accounts\n        on campaigns.account_id = accounts.account_id\n        and campaigns.source_relation = accounts.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15\n)\n\nselect *\nfrom fields", "relation_name": "`dbt-package-testing`.`google_ads_tests_google_ads_dev`.`google_ads__ad_report`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:03.035517Z", "completed_at": "2024-07-08T22:44:03.049690Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.050349Z", "completed_at": "2024-07-08T22:44:03.050354Z"}], "thread_id": "Thread-4", "execution_time": 0.016045093536376953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads.google_ads__url_report", "compiled": true, "compiled_code": "\n\nwith stats as (\n\n    select *\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_stats`\n), \n\naccounts as (\n\n    select *\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__account_history`\n    where is_most_recent_record = True\n), \n\ncampaigns as (\n\n    select *\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__campaign_history`\n    where is_most_recent_record = True\n), \n\nad_groups as (\n\n    select *\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_group_history`\n    where is_most_recent_record = True\n),\n\nads as (\n\n    select *\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_history`\n    where is_most_recent_record = True\n), \n\nfields as (\n\n    select\n        stats.source_relation,\n        stats.date_day,\n        accounts.account_name,\n        accounts.account_id,\n        accounts.currency_code,\n        campaigns.campaign_name,\n        campaigns.campaign_id,\n        ad_groups.ad_group_name,\n        stats.ad_group_id,\n        stats.ad_id,\n        ads.base_url,\n        ads.url_host,\n        ads.url_path,\n\n        \n\n        ads.utm_source,\n        ads.utm_medium,\n        ads.utm_campaign,\n        ads.utm_content,\n        \n        \n\n        ads.utm_term,\n        sum(stats.spend) as spend,\n        sum(stats.clicks) as clicks,\n        sum(stats.impressions) as impressions,\n        sum(conversions) as conversions,\n        sum(conversions_value) as conversions_value,\n        sum(view_through_conversions) as view_through_conversions\n\n        \n\n\n\n\n\n    from stats\n    left join ads\n        on stats.ad_id = ads.ad_id\n        and stats.source_relation = ads.source_relation\n        and stats.ad_group_id = ads.ad_group_id\n    left join ad_groups\n        on ads.ad_group_id = ad_groups.ad_group_id\n        and ads.source_relation = ad_groups.source_relation\n    left join campaigns\n        on ad_groups.campaign_id = campaigns.campaign_id\n        and ad_groups.source_relation = campaigns.source_relation\n    left join accounts\n        on campaigns.account_id = accounts.account_id\n        and campaigns.source_relation = accounts.source_relation\n\n    \n        where ads.source_final_urls is not null\n    \n\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18\n)\n\nselect *\nfrom fields", "relation_name": "`dbt-package-testing`.`google_ads_tests_google_ads_dev`.`google_ads__url_report`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:03.046179Z", "completed_at": "2024-07-08T22:44:03.051468Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.052723Z", "completed_at": "2024-07-08T22:44:03.052727Z"}], "thread_id": "Thread-2", "execution_time": 0.01087188720703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__ad_stats_source_relation__ad_id__ad_network_type__device__ad_group_id__keyword_ad_group_criterion__date_day.222a7d9413", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_id, ad_network_type, device, ad_group_id, keyword_ad_group_criterion, date_day\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_stats`\n    group by source_relation, ad_id, ad_network_type, device, ad_group_id, keyword_ad_group_criterion, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:03.053137Z", "completed_at": "2024-07-08T22:44:03.060994Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.061513Z", "completed_at": "2024-07-08T22:44:03.061520Z"}], "thread_id": "Thread-4", "execution_time": 0.01024007797241211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.not_null_stg_google_ads__ad_stats_ad_id.2612d83cc8", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_stats`\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:03.057679Z", "completed_at": "2024-07-08T22:44:03.066685Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.067379Z", "completed_at": "2024-07-08T22:44:03.067385Z"}], "thread_id": "Thread-2", "execution_time": 0.01091313362121582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.not_null_stg_google_ads__ad_stats_date_day.9a43c0fce4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_stats`\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:03.063334Z", "completed_at": "2024-07-08T22:44:03.068263Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.069578Z", "completed_at": "2024-07-08T22:44:03.069582Z"}], "thread_id": "Thread-4", "execution_time": 0.007723093032836914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__account_report_source_relation__account_id__date_day.8480aa9317", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, account_id, date_day\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`google_ads__account_report`\n    group by source_relation, account_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:03.070650Z", "completed_at": "2024-07-08T22:44:03.078995Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.079523Z", "completed_at": "2024-07-08T22:44:03.079528Z"}], "thread_id": "Thread-2", "execution_time": 0.011099100112915039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads.not_null_google_ads__account_report_account_id.abb0985422", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`google_ads__account_report`\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:03.075856Z", "completed_at": "2024-07-08T22:44:03.079766Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.081097Z", "completed_at": "2024-07-08T22:44:03.081100Z"}], "thread_id": "Thread-4", "execution_time": 0.006834745407104492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__ad_group_report_source_relation__ad_group_id__date_day.41d73a32f3", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_group_id, date_day\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`google_ads__ad_group_report`\n    group by source_relation, ad_group_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:03.082790Z", "completed_at": "2024-07-08T22:44:03.090152Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.090708Z", "completed_at": "2024-07-08T22:44:03.090713Z"}], "thread_id": "Thread-2", "execution_time": 0.010086774826049805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads.not_null_google_ads__ad_group_report_ad_group_id.c186523c0c", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_group_id\nfrom `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`google_ads__ad_group_report`\nwhere ad_group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:03.086838Z", "completed_at": "2024-07-08T22:44:03.090958Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.092426Z", "completed_at": "2024-07-08T22:44:03.092431Z"}], "thread_id": "Thread-4", "execution_time": 0.007292985916137695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__ad_report_source_relation__ad_id__ad_group_id__date_day.0e82f7e99a", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_id, ad_group_id, date_day\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`google_ads__ad_report`\n    group by source_relation, ad_id, ad_group_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:03.094157Z", "completed_at": "2024-07-08T22:44:03.102045Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.103244Z", "completed_at": "2024-07-08T22:44:03.103251Z"}], "thread_id": "Thread-2", "execution_time": 0.011380910873413086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads.not_null_google_ads__ad_report_ad_id.7bd6a287ad", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`google_ads__ad_report`\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:03.097838Z", "completed_at": "2024-07-08T22:44:03.102402Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.103545Z", "completed_at": "2024-07-08T22:44:03.103549Z"}], "thread_id": "Thread-4", "execution_time": 0.007502079010009766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__url_report_source_relation__ad_id__ad_group_id__date_day.e11b928273", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_id, ad_group_id, date_day\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`google_ads__url_report`\n    group by source_relation, ad_id, ad_group_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:03.106047Z", "completed_at": "2024-07-08T22:44:03.109907Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.110441Z", "completed_at": "2024-07-08T22:44:03.110446Z"}], "thread_id": "Thread-2", "execution_time": 0.005520820617675781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads.not_null_google_ads__url_report_base_url.e3578c0f72", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect base_url\nfrom `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`google_ads__url_report`\nwhere base_url is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:02.866458Z", "completed_at": "2024-07-08T22:44:03.233996Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.234789Z", "completed_at": "2024-07-08T22:44:03.234799Z"}], "thread_id": "Thread-3", "execution_time": 0.3696787357330322, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__campaign_stats", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__campaign_stats_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_id\n    \n as \n    \n    _fivetran_id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    ad_network_type\n    \n as \n    \n    ad_network_type\n    \n, \n    \n    \n    clicks\n    \n as \n    \n    clicks\n    \n, \n    \n    \n    cost_micros\n    \n as \n    \n    cost_micros\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    date\n    \n as \n    \n    date\n    \n, \n    \n    \n    device\n    \n as \n    \n    device\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    impressions\n    \n as \n    \n    impressions\n    \n, \n    \n    \n    conversions\n    \n as \n    \n    conversions\n    \n, \n    \n    \n    conversions_value\n    \n as \n    \n    conversions_value\n    \n, \n    \n    \n    view_through_conversions\n    \n as \n    \n    view_through_conversions\n    \n, \n    \n    \n    view_through_conversions\n    \n as view_through_conversions_aliased \n\n\n    \n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        customer_id as account_id, \n        date as date_day, \n        id as campaign_id, \n        ad_network_type,\n        device,\n        coalesce(clicks, 0) as clicks, \n        coalesce(cost_micros, 0) / 1000000.0 as spend, \n        coalesce(impressions, 0) as impressions,\n        coalesce(conversions, 0) as conversions,\n        coalesce(conversions_value, 0) as conversions_value,\n        coalesce(view_through_conversions, 0) as view_through_conversions\n        \n        \n\n\n    \n        \n    \n        \n            \n                , coalesce(cast(view_through_conversions_aliased as FLOAT64), 0) as view_through_conversions_aliased\n            \n        \n    \n\n\n\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__campaign_stats`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:03.239934Z", "completed_at": "2024-07-08T22:44:03.267471Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.268181Z", "completed_at": "2024-07-08T22:44:03.268189Z"}], "thread_id": "Thread-4", "execution_time": 0.03202104568481445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads.google_ads__campaign_report", "compiled": true, "compiled_code": "\n\nwith stats as (\n\n    select *\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__campaign_stats`\n), \n\naccounts as (\n\n    select *\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__account_history`\n    where is_most_recent_record = True\n), \n\ncampaigns as (\n\n    select *\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__campaign_history`\n    where is_most_recent_record = True\n), \n\nfields as (\n\n    select\n        stats.source_relation,\n        stats.date_day,\n        accounts.account_name,\n        accounts.account_id,\n        accounts.currency_code,\n        campaigns.campaign_name,\n        stats.campaign_id,\n        campaigns.advertising_channel_type,\n        campaigns.advertising_channel_subtype,\n        campaigns.status,\n        sum(stats.spend) as spend,\n        sum(stats.clicks) as clicks,\n        sum(stats.impressions) as impressions,\n        sum(conversions) as conversions,\n        sum(conversions_value) as conversions_value,\n        sum(view_through_conversions) as view_through_conversions\n\n        \n\n\n    \n        \n        \n    \n        \n        \n        , sum(coalesce(stats.view_through_conversions_aliased, 0)) as view_through_conversions_aliased\n        \n    \n\n\n\n\n    from stats\n    left join campaigns\n        on stats.campaign_id = campaigns.campaign_id\n        and stats.source_relation = campaigns.source_relation\n    left join accounts\n        on campaigns.account_id = accounts.account_id\n        and campaigns.source_relation = accounts.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10\n)\n\nselect *\nfrom fields", "relation_name": "`dbt-package-testing`.`google_ads_tests_google_ads_dev`.`google_ads__campaign_report`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:03.259477Z", "completed_at": "2024-07-08T22:44:03.268471Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.271000Z", "completed_at": "2024-07-08T22:44:03.271003Z"}], "thread_id": "Thread-2", "execution_time": 0.03443789482116699, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__campaign_stats_source_relation__campaign_id__ad_network_type__device__date_day.fea3ecfe6f", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, campaign_id, ad_network_type, device, date_day\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__campaign_stats`\n    group by source_relation, campaign_id, ad_network_type, device, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:02.878782Z", "completed_at": "2024-07-08T22:44:03.269363Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.271698Z", "completed_at": "2024-07-08T22:44:03.271705Z"}], "thread_id": "Thread-1", "execution_time": 0.3967599868774414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads_source.stg_google_ads__keyword_stats", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__keyword_stats_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_id\n    \n as \n    \n    _fivetran_id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    ad_group_criterion_criterion_id\n    \n as \n    \n    ad_group_criterion_criterion_id\n    \n, \n    \n    \n    ad_group_id\n    \n as \n    \n    ad_group_id\n    \n, \n    \n    \n    ad_network_type\n    \n as \n    \n    ad_network_type\n    \n, \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    clicks\n    \n as \n    \n    clicks\n    \n, \n    \n    \n    cost_micros\n    \n as \n    \n    cost_micros\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    date\n    \n as \n    \n    date\n    \n, \n    \n    \n    device\n    \n as \n    \n    device\n    \n, \n    \n    \n    impressions\n    \n as \n    \n    impressions\n    \n, \n    \n    \n    conversions\n    \n as \n    \n    conversions\n    \n, \n    \n    \n    conversions_value\n    \n as \n    \n    conversions_value\n    \n, \n    \n    \n    view_through_conversions\n    \n as \n    \n    view_through_conversions\n    \n\n\n\n    \n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        _fivetran_id as keyword_id,\n        customer_id as account_id, \n        date as date_day, \n        cast(ad_group_id as string) as ad_group_id,\n        ad_group_criterion_criterion_id as criterion_id,\n        campaign_id, \n        coalesce(clicks, 0) as clicks, \n        coalesce(cost_micros, 0) / 1000000.0 as spend, \n        coalesce(impressions, 0) as impressions,\n        coalesce(conversions, 0) as conversions,\n        coalesce(conversions_value, 0) as conversions_value,\n        coalesce(view_through_conversions, 0) as view_through_conversions\n        \n        \n\n\n\n\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__keyword_stats`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:03.263769Z", "completed_at": "2024-07-08T22:44:03.269626Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.271985Z", "completed_at": "2024-07-08T22:44:03.271989Z"}], "thread_id": "Thread-3", "execution_time": 0.034770965576171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.not_null_stg_google_ads__campaign_stats_campaign_id.11587fa10f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__campaign_stats`\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:03.274362Z", "completed_at": "2024-07-08T22:44:03.280116Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.294963Z", "completed_at": "2024-07-08T22:44:03.294972Z"}], "thread_id": "Thread-4", "execution_time": 0.028274059295654297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.not_null_stg_google_ads__campaign_stats_date_day.dc097fd76b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__campaign_stats`\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:03.284036Z", "completed_at": "2024-07-08T22:44:03.295313Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.301258Z", "completed_at": "2024-07-08T22:44:03.301264Z"}], "thread_id": "Thread-1", "execution_time": 0.032898902893066406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads.not_null_google_ads__campaign_report_campaign_id.cc6694fa0e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`google_ads__campaign_report`\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:03.280386Z", "completed_at": "2024-07-08T22:44:03.295671Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.305238Z", "completed_at": "2024-07-08T22:44:03.305243Z"}], "thread_id": "Thread-2", "execution_time": 0.03424406051635742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__campaign_report_source_relation__campaign_id__advertising_channel_type__advertising_channel_subtype__date_day.29077cbd5e", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, campaign_id, advertising_channel_type, advertising_channel_subtype, date_day\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`google_ads__campaign_report`\n    group by source_relation, campaign_id, advertising_channel_type, advertising_channel_subtype, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:03.288750Z", "completed_at": "2024-07-08T22:44:03.300931Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.312971Z", "completed_at": "2024-07-08T22:44:03.312976Z"}], "thread_id": "Thread-3", "execution_time": 0.03800678253173828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.google_ads.google_ads__keyword_report", "compiled": true, "compiled_code": "\n\nwith stats as (\n\n    select *\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__keyword_stats`\n), \n\naccounts as (\n\n    select *\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__account_history`\n    where is_most_recent_record = True\n),\n\ncampaigns as (\n\n    select *\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__campaign_history`\n    where is_most_recent_record = True\n), \n\nad_groups as (\n\n    select *\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_group_history`\n    where is_most_recent_record = True\n), \n\ncriterions as (\n\n    select *\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__ad_group_criterion_history`\n    where is_most_recent_record = True\n), \n\nfields as (\n\n    select\n        stats.source_relation,\n        stats.date_day,\n        accounts.account_name,\n        stats.account_id,\n        accounts.currency_code,\n        campaigns.campaign_name,\n        stats.campaign_id,\n        ad_groups.ad_group_name,\n        stats.ad_group_id,\n        stats.criterion_id,\n        criterions.type,\n        criterions.status,\n        criterions.keyword_match_type,\n        criterions.keyword_text,\n        sum(stats.spend) as spend,\n        sum(stats.clicks) as clicks,\n        sum(stats.impressions) as impressions,\n        sum(conversions) as conversions,\n        sum(conversions_value) as conversions_value,\n        sum(view_through_conversions) as view_through_conversions\n\n        \n\n\n\n\n\n    from stats\n    left join criterions\n        on stats.criterion_id = criterions.criterion_id\n        and stats.source_relation = criterions.source_relation\n    left join ad_groups\n        on stats.ad_group_id = ad_groups.ad_group_id\n        and stats.source_relation = ad_groups.source_relation\n    left join campaigns\n        on stats.campaign_id = campaigns.campaign_id\n        and stats.source_relation = campaigns.source_relation\n    left join accounts\n        on stats.account_id = accounts.account_id\n        and stats.source_relation = accounts.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14\n)\n\nselect *\nfrom fields", "relation_name": "`dbt-package-testing`.`google_ads_tests_google_ads_dev`.`google_ads__keyword_report`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:03.313870Z", "completed_at": "2024-07-08T22:44:03.322873Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.327025Z", "completed_at": "2024-07-08T22:44:03.327030Z"}], "thread_id": "Thread-4", "execution_time": 0.02343916893005371, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.dbt_utils_unique_combination_of_columns_stg_google_ads__keyword_stats_source_relation__keyword_id__date_day.4ecf84a32f", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, keyword_id, date_day\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__keyword_stats`\n    group by source_relation, keyword_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:03.319867Z", "completed_at": "2024-07-08T22:44:03.327321Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.332578Z", "completed_at": "2024-07-08T22:44:03.332582Z"}], "thread_id": "Thread-1", "execution_time": 0.015899181365966797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.not_null_stg_google_ads__keyword_stats_date_day.a9da72f74d", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_day\nfrom `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__keyword_stats`\nwhere date_day is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:03.323564Z", "completed_at": "2024-07-08T22:44:03.331949Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.334315Z", "completed_at": "2024-07-08T22:44:03.334318Z"}], "thread_id": "Thread-2", "execution_time": 0.017015933990478516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_source.not_null_stg_google_ads__keyword_stats_keyword_id.f0945d6cf0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect keyword_id\nfrom `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`stg_google_ads__keyword_stats`\nwhere keyword_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:03.327585Z", "completed_at": "2024-07-08T22:44:03.333131Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.335808Z", "completed_at": "2024-07-08T22:44:03.335811Z"}], "thread_id": "Thread-3", "execution_time": 0.016527175903320312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads.dbt_utils_unique_combination_of_columns_google_ads__keyword_report_source_relation__ad_group_id__criterion_id__date_day.82605f3acd", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_group_id, criterion_id, date_day\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`google_ads__keyword_report`\n    group by source_relation, ad_group_id, criterion_id, date_day\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:03.336089Z", "completed_at": "2024-07-08T22:44:03.344366Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.344873Z", "completed_at": "2024-07-08T22:44:03.344877Z"}], "thread_id": "Thread-4", "execution_time": 0.011922836303710938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads.not_null_google_ads__keyword_report_criterion_id.4cab66a055", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect criterion_id\nfrom `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`google_ads__keyword_report`\nwhere criterion_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-07-08T22:44:03.340335Z", "completed_at": "2024-07-08T22:44:03.345664Z"}, {"name": "execute", "started_at": "2024-07-08T22:44:03.346168Z", "completed_at": "2024-07-08T22:44:03.346173Z"}], "thread_id": "Thread-1", "execution_time": 0.007559061050415039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.google_ads_integration_tests.vertical_sum_conversions", "compiled": true, "compiled_code": "with account_source as (\n\n    select \n        sum(coalesce(conversion_value, 0)) as total_value,\n        sum(coalesce(conversions, 0)) as conversions,\n        sum(coalesce(view_through_conversions, 0)) as view_through_conversions\n    from `dbt-package-testing`.`google_ads_tests`.`account_stats_data`\n),\n\naccount_model as (\n\n    select \n        sum(coalesce(conversion_value, 0)) as total_value,\n        sum(coalesce(conversions, 0)) as conversions,\n        sum(coalesce(view_through_conversions, 0)) as view_through_conversions\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`google_ads__account_report`\n),\n\nad_source as (\n\n    select \n        sum(coalesce(conversion_value, 0)) as total_value,\n        sum(coalesce(conversions, 0)) as conversions,\n        sum(coalesce(view_through_conversions, 0)) as view_through_conversions\n    from `dbt-package-testing`.`google_ads_tests`.`ad_stats_data`\n),\n\nad_model as (\n\n    select \n        sum(coalesce(conversion_value, 0)) as total_value,\n        sum(coalesce(conversions, 0)) as conversions,\n        sum(coalesce(view_through_conversions, 0)) as view_through_conversions\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`google_ads__ad_report`\n),\n\nad_group_source as (\n\n    select \n        sum(coalesce(conversion_value, 0)) as total_value,\n        sum(coalesce(conversions, 0)) as conversions,\n        sum(coalesce(view_through_conversions, 0)) as view_through_conversions\n    from `dbt-package-testing`.`google_ads_tests`.`ad_group_stats_data`\n),\n\nad_group_model as (\n\n    select \n        sum(coalesce(conversion_value, 0)) as total_value,\n        sum(coalesce(conversions, 0)) as conversions,\n        sum(coalesce(view_through_conversions, 0)) as view_through_conversions\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`google_ads__ad_group_report`\n),\n\ncampaign_source as (\n\n    select \n        sum(coalesce(conversion_value, 0)) as total_value,\n        sum(coalesce(conversions, 0)) as conversions,\n        sum(coalesce(view_through_conversions, 0)) as view_through_conversions\n    from `dbt-package-testing`.`google_ads_tests`.`campaign_stats_data`\n),\n\ncampaign_model as (\n\n    select \n        sum(coalesce(conversion_value, 0)) as total_value,\n        sum(coalesce(conversions, 0)) as conversions,\n        sum(coalesce(view_through_conversions, 0)) as view_through_conversions\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`google_ads__campaign_report`\n),\n\nurl_source as (\n\n    select \n        sum(coalesce(ad_stats.conversion_value, 0)) as total_value,\n        sum(coalesce(ad_stats.conversions, 0)) as conversions,\n        sum(coalesce(ad_stats.view_through_conversions, 0)) as view_through_conversions\n    from `dbt-package-testing`.`google_ads_tests`.`ad_stats_data`\n    join `dbt-package-testing`.`google_ads_tests`.`ad_history_data` on true\n    where ad_history.final_urls is not null\n),\n\nurl_model as (\n\n    select \n        sum(coalesce(conversion_value, 0)) as total_value,\n        sum(coalesce(conversions, 0)) as conversions,\n        sum(coalesce(view_through_conversions, 0)) as view_through_conversions\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`google_ads__url_report`\n),\n\nkeyword_source as (\n\n    select \n        sum(coalesce(conversion_value, 0)) as total_value,\n        sum(coalesce(conversions, 0)) as conversions,\n        sum(coalesce(view_through_conversions, 0)) as view_through_conversions\n    from `dbt-package-testing`.`google_ads_tests`.`keyword_stats_data`\n),\n\nkeyword_model as (\n\n    select \n        sum(coalesce(conversion_value, 0)) as total_value,\n        sum(coalesce(conversions, 0)) as conversions,\n        sum(coalesce(view_through_conversions, 0)) as view_through_conversions\n    from `dbt-package-testing`.`google_ads_tests_google_ads_dev`.`google_ads__keyword_report`\n)\n\nselect \n    'ads' as comparison\nfrom ad_model \njoin ad_source on true\nwhere ad_model.total_value != ad_source.total_value\n    or ad_model.total_conversions != ad_source.total_conversions\n    or ad_model.view_through_conversions != ad_source.view_through_conversions\n    \nunion all \n\nselect \n    'accounts' as comparison\nfrom account_model \njoin account_source on true\nwhere account_model.total_value != account_source.total_value\n    or account_model.total_conversions != account_source.total_conversions\n    or account_model.view_through_conversions != account_source.view_through_conversions\n\nunion all \n\nselect \n    'ad groups' as comparison\nfrom ad_group_model \njoin ad_group_source on true\nwhere ad_group_model.total_value != ad_group_source.total_value\n    or ad_group_model.total_conversions != ad_group_source.total_conversions\n    or ad_group_model.view_through_conversions != ad_group_source.view_through_conversions\n\nunion all \n\nselect \n    'campaigns' as comparison\nfrom campaign_model \njoin campaign_source on true\nwhere campaign_model.total_value != campaign_source.total_value\n    or campaign_model.total_conversions != campaign_source.total_conversions\n    or campaign_model.view_through_conversions != campaign_source.view_through_conversions\n\nunion all \n\nselect \n    'keywords' as comparison\nfrom keyword_model \njoin keyword_source on true\nwhere keyword_model.total_value != keyword_source.total_value\n    or keyword_model.total_conversions != keyword_source.total_conversions\n    or keyword_model.view_through_conversions != keyword_source.view_through_conversions\n\nunion all \n\nselect \n    'urls' as comparison\nfrom url_model \njoin url_source on true\nwhere url_model.total_value != url_source.total_value\n    or url_model.total_conversions != url_source.total_conversions\n    or url_model.view_through_conversions != url_source.view_through_conversions", "relation_name": null}], "elapsed_time": 2.668516159057617, "args": {"static": false, "defer": false, "log_format": "default", "version_check": true, "which": "generate", "invocation_command": "dbt docs generate", "introspect": true, "cache_selected_only": false, "partial_parse": true, "select": [], "warn_error_options": {"include": [], "exclude": []}, "macro_debugging": false, "show_resource_report": false, "log_level_file": "debug", "project_dir": "/Users/jamie.rodriguez/Desktop/dbt_repos/Ads/Google_ads/dbt_google_ads/integration_tests", "populate_cache": true, "strict_mode": false, "compile": true, "log_format_file": "debug", "log_path": "/Users/jamie.rodriguez/Desktop/dbt_repos/Ads/Google_ads/dbt_google_ads/integration_tests/logs", "quiet": false, "print": true, "enable_legacy_logger": false, "send_anonymous_usage_stats": true, "log_level": "info", "log_file_max_bytes": 10485760, "printer_width": 80, "vars": {}, "static_parser": true, "use_colors_file": true, "indirect_selection": "eager", "empty_catalog": false, "partial_parse_file_diff": true, "use_colors": true, "write_json": true, "exclude": [], "favor_state": false, "profiles_dir": "/Users/jamie.rodriguez/.dbt"}}